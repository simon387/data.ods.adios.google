name: 🚀 Deploy website on push

on:
  push:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  deploy:
    name: 🎉 Deploy to FTP
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: 🚚 Get latest code
        uses: actions/checkout@v4

      - name: 📋 List files to deploy
        run: |
          echo "Files that will be deployed:"
          find . -type f \( -name "*.html" -o -name "*.css" -o -name "*.js" -o -name "*.php" -o -name "*.txt" \) | grep -v "/.git" | sort

      - name: 📂 Deploy with retry strategy
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 15
          max_attempts: 4
          retry_wait_seconds: 30
          command: |
            echo "🚀 Attempting FTP deployment (Attempt ${{ github.run_attempt }})"

      - name: 📁 Primary FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.ftp_server }}
          username: ${{ secrets.ftp_username }}
          password: ${{ secrets.ftp_password }}
          server-dir: x/
          timeout: 300000
          log-level: verbose
          prefer-ipv4: true
          passive: true
          exclude: |
            **/.git*
            **/.git*/**
            **/sql/**
            README.md
            Config.php
            .github/**
            .gitignore
            *.md

      - name: 📂 Fallback FTPS Deploy
        if: failure()
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.ftp_server }}
          username: ${{ secrets.ftp_username }}
          password: ${{ secrets.ftp_password }}
          protocol: ftps
          port: 21
          server-dir: x/
          timeout: 600000
          log-level: verbose
          security: loose
          exclude: |
            **/.git*
            **/.git*/**
            **/sql/**
            README.md
            Config.php
            .github/**

      - name: 📂 Ultimate fallback SFTP
        if: failure()
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          server: ${{ secrets.ftp_server }}
          username: ${{ secrets.ftp_username }}
          password: ${{ secrets.ftp_password }}
          port: 22
          local_path: './'
          remote_path: '/x/'
          sftp_only: true
          args: '-o ConnectTimeout=5'

      - name: 🧹 Success cleanup
        if: success()
        run: |
          echo "✅ Deployment completed successfully!"
          echo "🔗 Files deployed to server/x/"
          echo "📊 Deployment stats:"
          echo "- Repository: ${{ github.repository }}"
          echo "- Branch: ${{ github.ref_name }}"
          echo "- Commit: ${{ github.sha }}"
          echo "- Actor: ${{ github.actor }}"

      - name: 📧 Success notification
        if: success()
        run: echo "🎉 Your Excel Web Editor has been deployed successfully!"

      - name: 🚨 Failure analysis
        if: failure()
        run: |
          echo "❌ All deployment methods failed!"
          echo "🔍 Troubleshooting suggestions:"
          echo "1. Check FTP server status"
          echo "2. Verify credentials are correct"
          echo "3. Check if server supports passive mode"
          echo "4. Try connecting manually to verify server availability"
          echo "5. Consider contacting hosting provider"
          echo ""
          echo "💡 Alternative deployment methods to try:"
          echo "- Use SFTP if available (port 22)"
          echo "- Use cPanel File Manager"
          echo "- Use hosting provider deployment tools"

  connectivity-test:
    name: 🔌 Test Server Connectivity
    runs-on: ubuntu-latest
    steps:
      - name: 🏓 Test basic connectivity
        run: |
          echo "Testing basic connectivity"
          timeout 10 ping -c 2 ${{ secrets.ftp_server }} || echo "Direct ping failed"

      - name: 🔍 Check FTP port 21
        run: |
          echo "Testing FTP port 21"
          timeout 10 bash -c "</dev/tcp/${{ secrets.ftp_server }}/21" && echo "✅ FTP port 21 accessible" || echo "❌ FTP port 21 not accessible"

      - name: 🔍 Check SFTP port 22
        run: |
          echo "Testing SFTP port 22"  
          timeout 10 bash -c "</dev/tcp/${{ secrets.ftp_server }}/22" && echo "✅ SFTP port 22 accessible" || echo "❌ SFTP port 22 not accessible"