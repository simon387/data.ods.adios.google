name: 🚀 Deploy website on push

on:
  push:
    branches: [ master, main ]
  workflow_dispatch: # Permette esecuzione manuale

jobs:
  deploy:
    name: 🎉 Deploy to FTP
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: 🚚 Get latest code
        uses: actions/checkout@v4

      - name: 📋 List files to deploy
        run: |
          echo "Files that will be deployed:"
          find . -type f -name "*.html" -o -name "*.css" -o -name "*.js" -o -name "*.php" -o -name "*.txt" | grep -v "/.git" | sort

      - name: 📂 Deploy with primary strategy
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 15
          max_attempts: 3
          retry_wait_seconds: 30
          command: |
            echo "🚀 Attempting FTP deployment"
            # Usa l'action FTP deploy con configurazioni ottimizzate
            docker run --rm \
              -v "${{ github.workspace }}:/github/workspace" \
              -e INPUT_SERVER="${{ secrets.ftp_server }}" \
              -e INPUT_USERNAME="${{ secrets.ftp_username }}" \
              -e INPUT_PASSWORD="${{ secrets.ftp_password }}" \
              -e INPUT_SERVER_DIR="x/" \
              -e INPUT_TIMEOUT="300000" \
              -e INPUT_LOG_LEVEL="verbose" \
              -e INPUT_PREFER_IPV4="true" \
              -e INPUT_PASSIVE="true" \
              -e INPUT_EXCLUDE="**/.git*,**/.git*/**,**/sql/**,README.md,Config.php,.github/**" \
              samkirkland/ftp-deploy-action:4.3.5

      - name: 📂 Fallback: Standard FTP Deploy
        if: failure()
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.ftp_server }}
          username: ${{ secrets.ftp_username }}
          password: ${{ secrets.ftp_password }}
          server-dir: x/
          timeout: 300000
          log-level: verbose
          prefer-ipv4: true
          passive: true
          exclude: |
            **/.git*
            **/.git*/**
            **/sql/**
            README.md
            Config.php
            .github/**
            .gitignore
            *.md

      - name: 📂 Fallback: FTPS Deploy
        if: failure()
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.ftp_server }}
          username: ${{ secrets.ftp_username }}
          password: ${{ secrets.ftp_password }}
          protocol: ftps
          port: 21
          server-dir: x/
          timeout: 600000
          log-level: verbose
          security: loose
          exclude: |
            **/.git*
            **/.git*/**
            **/sql/**
            README.md
            Config.php
            .github/**

      - name: 📂 Ultimate fallback: SFTP Deploy
        if: failure()
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          server: ${{ secrets.ftp_server }}
          username: ${{ secrets.ftp_username }}
          password: ${{ secrets.ftp_password }}
          port: 22
          local_path: './'
          remote_path: '/x/'
          sftp_only: true
          args: '-o ConnectTimeout=5'

      - name: 🧹 Cleanup and verify
        if: success()
        run: |
          echo "✅ Deployment completed successfully!"
          echo "🔗 Files deployed to: ${{ secrets.ftp_server }}/x/"
          echo "📊 Deployment stats:"
          echo "- Repository: ${{ github.repository }}"
          echo "- Branch: ${{ github.ref_name }}"
          echo "- Commit: ${{ github.sha }}"
          echo "- Actor: ${{ github.actor }}"

      - name: 📧 Success notification
        if: success()
        run: |
          echo "🎉 Deployment successful!"
          echo "Your Excel Web Editor has been deployed successfully."

      - name: 🚨 Failure analysis
        if: failure()
        run: |
          echo "❌ All deployment methods failed!"
          echo "🔍 Troubleshooting suggestions:"
          echo "1. Check FTP server status: ${{ secrets.ftp_server }}"
          echo "2. Verify credentials are correct"
          echo "3. Check if server supports passive mode"
          echo "4. Try connecting manually to verify server availability"
          echo "5. Consider contacting hosting provider"
          echo ""
          echo "💡 Alternative deployment methods to try:"
          echo "- Use SFTP if available (port 22)"
          echo "- Use cPanel File Manager"
          echo "- Use hosting provider's deployment tools"

  # Job separato per testare la connettività
  connectivity-test:
    name: 🔌 Test Server Connectivity
    runs-on: ubuntu-latest
    steps:
      - name: 🏓 Ping server
        run: |
          echo "Testing connectivity to server"
          # Test basic connectivity without revealing the server name in logs
          timeout 10 bash -c "ping -c 2 ${{ secrets.ftp_server }}" || echo "Ping failed, but server might still be accessible"

      - name: 🔍 Check FTP port
        run: |
          echo "Testing FTP port 21 connectivity"
          timeout 10 bash -c "</dev/tcp/${{ secrets.ftp_server }}/21" && echo "FTP port 21 is accessible" || echo "FTP port 21 not accessible"

      - name: 🔍 Check SFTP port
        run: |
          echo "Testing SFTP port 22 connectivity"
          timeout 10 bash -c "</dev/tcp/${{ secrets.ftp_server }}/22" && echo "SFTP port 22 is accessible" || echo "SFTP port 22 not accessible"